# Generated by Django 2.1.3 on 2018-11-25 21:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bearing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inner_race_diameter', models.FloatField(blank=True, null=True, verbose_name='Inner race diameter /mm')),
                ('inner_race_width', models.FloatField(blank=True, null=True, verbose_name='Inner race width /mm')),
                ('outter_race_diameter', models.FloatField(blank=True, null=True, verbose_name='Outter race diameter /mm')),
                ('outter_race_width', models.FloatField(blank=True, null=True, verbose_name='Outter race width /mm')),
                ('roller_diameter', models.FloatField(blank=True, null=True, verbose_name='Roller diameter /mm')),
                ('roller_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of rollers')),
                ('contact_angle', models.FloatField(blank=True, null=True, verbose_name='Contact angle ')),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of asset')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='Serial number')),
                ('statu', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'defective'), (4, 'backup')], default=2, verbose_name='Asset statu')),
                ('lr_time', models.DateTimeField(blank=True, null=True, verbose_name='Last repair/check date')),
                ('pr_time', models.DateTimeField(blank=True, null=True, verbose_name='Purchase date')),
                ('md_time', models.DateTimeField(auto_now_add=True, verbose_name='Modified date')),
                ('cr_time', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('sr_time', models.DateTimeField(blank=True, null=True, verbose_name='Start running date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memory')),
                ('component_type', models.CharField(blank=True, choices=[(0, 'Bearing'), (1, 'Gear'), (2, 'Rotor'), (3, 'Stator'), (4, 'Shaft')], max_length=64, null=True, verbose_name='Type of component')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DataCollector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of asset')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='Serial number')),
                ('statu', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'defective'), (4, 'backup')], default=2, verbose_name='Asset statu')),
                ('lr_time', models.DateTimeField(blank=True, null=True, verbose_name='Last repair/check date')),
                ('pr_time', models.DateTimeField(blank=True, null=True, verbose_name='Purchase date')),
                ('md_time', models.DateTimeField(auto_now_add=True, verbose_name='Modified date')),
                ('cr_time', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('sr_time', models.DateTimeField(blank=True, null=True, verbose_name='Start running date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memory')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Contract', verbose_name='Asset contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cylinder_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of cylinders')),
                ('displacement', models.FloatField(blank=True, null=True, verbose_name='Displacement /L')),
                ('rated_fuel_consumption', models.FloatField(blank=True, null=True, verbose_name='Rated fuel consumption /g/km.h')),
                ('rated_speed', models.FloatField(blank=True, null=True, verbose_name='Rated speed /rpm')),
                ('exhasut_gas_temp', models.FloatField(blank=True, null=True, verbose_name='exhasut gas temprature /C')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of asset')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='Serial number')),
                ('statu', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'defective'), (4, 'backup')], default=2, verbose_name='Asset statu')),
                ('lr_time', models.DateTimeField(blank=True, null=True, verbose_name='Last repair/check date')),
                ('pr_time', models.DateTimeField(blank=True, null=True, verbose_name='Purchase date')),
                ('md_time', models.DateTimeField(auto_now_add=True, verbose_name='Modified date')),
                ('cr_time', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('sr_time', models.DateTimeField(blank=True, null=True, verbose_name='Start running date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memory')),
                ('equipment_group_type', models.CharField(blank=True, choices=[(0, 'TopDriver'), (1, 'Propeller'), (2, 'Generator')], max_length=64, null=True, verbose_name='Type of equipment group')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Contract', verbose_name='Asset contract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teeth_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of tooth')),
                ('modulus', models.FloatField(blank=True, null=True, verbose_name='Modulus')),
                ('diameter', models.FloatField(blank=True, null=True, verbose_name='Index circle diameter')),
                ('tip_diameter', models.FloatField(blank=True, null=True, verbose_name='Tip circle diameter')),
                ('root_diameter', models.FloatField(blank=True, null=True, verbose_name='Root circle diameter')),
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Component')),
            ],
        ),
        migrations.CreateModel(
            name='GearBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ratio', models.CharField(blank=True, max_length=32, null=True, verbose_name='Speed ratio')),
                ('input_torque', models.FloatField(blank=True, null=True, verbose_name='Input torque/N.m')),
                ('max_torque', models.FloatField(blank=True, null=True, verbose_name='Max torque/N.m')),
                ('input_speed', models.FloatField(blank=True, null=True, verbose_name='Input speed/rpm')),
            ],
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('battery_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of batteries')),
                ('main_power', models.FloatField(blank=True, null=True, verbose_name='Main power /kW')),
                ('backup_power', models.FloatField(blank=True, null=True, verbose_name='Backup power /kW')),
                ('equipment_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of asset')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='Serial number')),
                ('statu', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'defective'), (4, 'backup')], default=2, verbose_name='Asset statu')),
                ('lr_time', models.DateTimeField(blank=True, null=True, verbose_name='Last repair/check date')),
                ('pr_time', models.DateTimeField(blank=True, null=True, verbose_name='Purchase date')),
                ('md_time', models.DateTimeField(auto_now_add=True, verbose_name='Modified date')),
                ('cr_time', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('sr_time', models.DateTimeField(blank=True, null=True, verbose_name='Start running date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memory')),
                ('machine_type', models.CharField(blank=True, choices=[(0, 'Motor'), (1, 'GearBox'), (2, 'Engine')], max_length=64, null=True, verbose_name='Type of machine')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Contract', verbose_name='Asset contract')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Location', verbose_name='Asset location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MeasurePoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=256, null=True, verbose_name='Description of the measuring point')),
                ('component', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Component')),
                ('equipment_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.EquipmentGroup')),
                ('machine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Motor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('efficiency', models.FloatField(blank=True, null=True, verbose_name='Efficiency /%')),
                ('phase_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of phases ')),
                ('pole_pairs_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of pole_pairs ')),
                ('turn_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of turns ')),
                ('rated_voltage', models.FloatField(blank=True, null=True, verbose_name='Rated voltage /V')),
                ('power_factor', models.FloatField(blank=True, null=True, verbose_name='Power factor ')),
                ('rated_speed', models.FloatField(blank=True, null=True, verbose_name='Rated speed /rpm')),
                ('machine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine')),
                ('parent_equipment_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Propeller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forward_force', models.FloatField(blank=True, null=True, verbose_name='Forward force /kg')),
                ('reverse_force', models.FloatField(blank=True, null=True, verbose_name='Reverse force /kg')),
                ('working_depth', models.FloatField(blank=True, null=True, verbose_name='Working depth /kg')),
                ('equipment_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup')),
            ],
        ),
        migrations.CreateModel(
            name='Rotor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.FloatField(blank=True, null=True, verbose_name='Power /kW')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Length /mm')),
                ('outer_diameter', models.FloatField(blank=True, null=True, verbose_name='Outer diameter /mm')),
                ('inner_diameter', models.FloatField(blank=True, null=True, verbose_name='Inner diameter /mm')),
                ('slot_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of slots')),
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Component')),
                ('parent_equipment_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Name of asset')),
                ('sn', models.CharField(max_length=128, unique=True, verbose_name='Serial number')),
                ('statu', models.SmallIntegerField(choices=[(0, 'online'), (1, 'offline'), (2, 'unknown'), (3, 'defective'), (4, 'backup')], default=2, verbose_name='Asset statu')),
                ('lr_time', models.DateTimeField(blank=True, null=True, verbose_name='Last repair/check date')),
                ('pr_time', models.DateTimeField(blank=True, null=True, verbose_name='Purchase date')),
                ('md_time', models.DateTimeField(auto_now_add=True, verbose_name='Modified date')),
                ('cr_time', models.DateTimeField(auto_now=True, verbose_name='Created date')),
                ('sr_time', models.DateTimeField(blank=True, null=True, verbose_name='Start running date')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='Memory')),
                ('sensor_type', models.CharField(blank=True, choices=[(0, 'Accelerator'), (1, 'CurrentProbe'), (2, 'TacoMeter')], max_length=128, null=True, verbose_name='Type of sensor')),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('contract', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Contract', verbose_name='Asset contract')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Location', verbose_name='Asset location')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='Manufacturer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SignalCollected',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vector', models.TextField(verbose_name='Collected Signal vector')),
                ('measurepoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.MeasurePoint')),
            ],
        ),
        migrations.CreateModel(
            name='Stator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.FloatField(blank=True, null=True, verbose_name='Power /kW')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Length /mm')),
                ('outer_diameter', models.FloatField(blank=True, null=True, verbose_name='Outer diameter /mm')),
                ('inner_diameter', models.FloatField(blank=True, null=True, verbose_name='Inner diameter /mm')),
                ('slot_number', models.SmallIntegerField(blank=True, null=True, verbose_name='Number of slots')),
                ('component', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Component')),
                ('parent_equipment_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TopDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drilling_depth', models.FloatField(blank=True, null=True, verbose_name='Nominal drilling depth /m')),
                ('max_load', models.FloatField(blank=True, null=True, verbose_name='Maximum loading /kN')),
                ('power_voltage', models.FloatField(blank=True, null=True, verbose_name='Power supply voltage /V')),
                ('power_frequency', models.FloatField(blank=True, null=True, verbose_name='Power supply frequency /Hz')),
                ('min_speed', models.FloatField(blank=True, null=True, verbose_name='Minimal rotation speed /rpm')),
                ('max_speed', models.FloatField(blank=True, null=True, verbose_name='Maximum rotation speed /rpm')),
                ('torque', models.FloatField(blank=True, null=True, verbose_name='Torque /kN.m')),
                ('equipment_group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup')),
            ],
        ),
        migrations.AddField(
            model_name='sensor',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='assets.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='measurepoint',
            name='sensor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Sensor'),
        ),
        migrations.AddField(
            model_name='machine',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='Manufacturer'),
        ),
        migrations.AddField(
            model_name='machine',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='assets.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='gearbox',
            name='machine',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine'),
        ),
        migrations.AddField(
            model_name='gearbox',
            name='parent_equipment_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup'),
        ),
        migrations.AddField(
            model_name='gear',
            name='parent_equipment_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine'),
        ),
        migrations.AddField(
            model_name='equipmentgroup',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Location', verbose_name='Asset location'),
        ),
        migrations.AddField(
            model_name='equipmentgroup',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='Manufacturer'),
        ),
        migrations.AddField(
            model_name='equipmentgroup',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='assets.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='engine',
            name='machine',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine'),
        ),
        migrations.AddField(
            model_name='engine',
            name='parent_equipment_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.EquipmentGroup'),
        ),
        migrations.AddField(
            model_name='datacollector',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Location', verbose_name='Asset location'),
        ),
        migrations.AddField(
            model_name='datacollector',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='Manufacturer'),
        ),
        migrations.AddField(
            model_name='datacollector',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='assets.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='component',
            name='contract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Contract', verbose_name='Asset contract'),
        ),
        migrations.AddField(
            model_name='component',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Location', verbose_name='Asset location'),
        ),
        migrations.AddField(
            model_name='component',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Manufacturer', verbose_name='Manufacturer'),
        ),
        migrations.AddField(
            model_name='component',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, to='assets.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='bearing',
            name='component',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Component'),
        ),
        migrations.AddField(
            model_name='bearing',
            name='parent_equipment_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Machine'),
        ),
    ]
